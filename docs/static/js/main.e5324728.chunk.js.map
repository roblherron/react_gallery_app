{"version":3,"sources":["config.js","components/Photo.js","components/NotFound.js","components/PhotoContainer.js","components/Search.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","Photo","props","url","data","server","farm","id","secret","className","src","alt","NotFound","this","queryState","Component","PhotoContainer","photos","map","photo","index","length","Search","onSearchChange","e","updateQueryState","target","value","handleSubmit","preventDefault","onSearch","history","push","pathname","search","onSubmit","type","onChange","name","placeholder","withRouter","Nav","onClickEvent","fetchData","updateQuery","console","log","to","onClick","App","str","setState","query","updatePhotosState","state","axios","get","then","response","catch","error","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e5324728.chunk.js","sourcesContent":["let apiKey = \"5e506bd15f5ff6b73f686a702884a2d1\";\n\nexport default apiKey;\n","import React from \"react\";\n\n//onclick() //render modal component on click\n\nconst Photo = (props) => {\n  const url = `https://live.staticflickr.com/${props.data.server}/${props.data.farm}/${props.data.id}_${props.data.secret}.jpg`;\n  return (\n    <li className=\"photo-container\">\n      <img src={url} alt=\"\" className=\"photo-container\" />\n    </li>\n  );\n};\n\nexport default Photo;\n","import React, { Component } from \"react\";\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"not-found\">\n        <h1>No Results Found</h1>\n        <p>Your search for \"{this.props.queryState}\" returned no results.</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Photo from \"./Photo\";\nimport NotFound from \"./NotFound\";\n\nexport default class PhotoContainer extends Component {\n  render() {\n    const photos = this.props.photos.map((photo, index) => (\n      <Photo data={this.props.photos[index]} key={photo.id} />\n    ));\n    if (this.props.photos.length < 1) {\n      // instead of rendering component, we could update the url... ðŸ¤”\n      return <NotFound queryState={this.props.queryState} />;\n    } else {\n      return <ul className=\"photo-container\">{photos}</ul>;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Search extends Component {\n  onSearchChange = (e) => {\n    this.props.updateQueryState(e.target.value);\n  };\n\n  handleSubmit = (e) => {\n    if (this.props.queryState !== \"\") {\n      e.preventDefault();\n      this.props.onSearch();\n      this.props.history.push({\n        pathname: \"/search\",\n        // our state lives in the url... (on purpose) ðŸ¤”\n        search: `?q=${this.props.queryState}`,\n      });\n    } else {\n      this.props.queryState = \"mountains\";\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"search\"\n          onChange={this.onSearchChange}\n          name=\"search\"\n          value={this.props.queryState}\n          placeholder=\"Search...\"\n        />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Search);\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class Nav extends Component {\n  onClickEvent = (e) => {\n    this.props.fetchData(e.target.id);\n    this.props.updateQuery(e.target.id);\n    console.log(e.target.id);\n    //current issue is that e.target.value is coming back as undefined\n  };\n\n  render() {\n    return (\n      <header>\n        <ul className=\"main-nav\">\n          <li>\n            <NavLink\n              to={{ pathname: \"search\", search: \"?q=mountains\" }}\n              id=\"mountains\"\n              onClick={this.onClickEvent}\n            >\n              Mountains\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={{ pathname: \"search\", search: \"?q=trees\" }}\n              id=\"trees\"\n              onClick={this.onClickEvent}\n            >\n              Trees\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={{ pathname: \"search\", search: \"?q=stars\" }}\n              id=\"stars\"\n              onClick={this.onClickEvent}\n            >\n              Stars\n            </NavLink>\n          </li>\n        </ul>\n      </header>\n    );\n  }\n}\n","/* \nTO-DO: \n1. create loading feature\n2. review code, add comments, and debug\n3. BUG history switches url path but doesn't update query results\n4. BUG nav tabs aren't set to active when clicked\n5. BUG route paths have two 'search/' when navigating\n6. (Optional) Refactor using context API to reduce prop drilling\n*/\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport apiKey from \"./config\";\n\n//App Components\nimport PhotoContainer from \"./components/PhotoContainer\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport NotFound from \"./components/NotFound\";\n\n// different moments in programming:\n// 1. When you are defining a function (function input is ?)\n// 2. When you are invoking a function (function input is known)\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    // single source of truth; never duplicated anywhere.\n    this.state = {\n      photos: [],\n      // perhaps, instead of using react state for this value, we could rely on the url\n      query: \"mountains\",\n    };\n  }\n\n  componentDidMount() {\n    this.updatePhotosState();\n  }\n\n  updateQueryState = (str) => {\n    this.setState({ query: `${str}` });\n  };\n\n  updatePhotosState = (query = this.state.query) => {\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`\n      )\n      .then((response) => {\n        this.setState({\n          photos: response.data.photos.photo,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data:\", error);\n      });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <div className=\"main-header\">\n            <div className=\"inner\">\n              <h1 className=\"main-title\">Photo Search</h1>\n            </div>\n          </div>\n          <Search\n            onSearch={this.updatePhotosState}\n            queryState={this.state.query}\n            updateQueryState={this.updateQueryState}\n          />\n        </div>\n        <div className=\"main-nav\">\n          <Nav\n            fetchData={this.updatePhotosState}\n            updateQuery={this.updateQueryState}\n          />\n        </div>\n        <div className=\"main-content\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to=\"/search/?q=mountains\" />}\n            />\n            <Route\n              path=\"/search\"\n              render={() => (\n                <PhotoContainer\n                  photos={this.state.photos}\n                  queryState={this.state.query}\n                />\n              )}\n            />\n            {/* this path is never actually rendered ðŸ‘‡ */}\n            <Route\n              path=\"/no-results\"\n              render={() => <NotFound queryState={this.state.query} />}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}